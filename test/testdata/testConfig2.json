{"notifications":[{"name":"test_github","celExpressionFilter":"attributes.test == 'github'","type":"log","properties":{"message":{"value":"\u003c!-- =================================== The following sets the values of variables used throughout the template =================================== --\u003e\n{{ $pipelineStatus := \"Failed :x:\" -}}\n{{if eq .data.extra.pipelineRunVariables.TN_PIPELINE_STATUS \"Successful\" -}}\n  {{$pipelineStatus = \"Succeeded :white_check_mark:\" -}}\n{{end -}}\n\n{{ $tasksToLogNames := \"\" | splitList \",\" -}}\n{{ $tasksToLog := newArray -}}\n{{ $planSumRegex := \"Plan: [0-9]+ to add, [0-9]+ to change, [0-9]+ to destroy\" -}}\n{{ $planTask := \"\" -}}\n{{ $planTaskName := .data.extra.pipelineRunObject.metadata.annotations | select \"tekton-notify.internal.com/git-plan-task-name\" | firstOrDefault \"\" -}}\n{{ $commentTaskNames := .data.extra.pipelineRunObject.metadata.annotations | select \"tekton-notify.internal.com/git-comment-task-names\" | firstOrDefault \"{}\" | fromJson -}}\n\n{{ range $name := $commentTaskNames -}}\n   {{ $tasksToLogNames = append $tasksToLogNames $name -}}\n{{ end -}}\n\n{{ $failedTasks := .data.extra.pipelineRunVariables.TN_FAILED_TASKS | splitList \",\" -}}\n{{ range $name := $failedTasks -}}\n   {{ $tasksToLogNames = append $tasksToLogNames $name -}}\n{{ end -}}\n\n{{ $canceledTasks := .data.extra.pipelineRunVariables.TN_CANCELLED_TASKS | splitList \",\" -}}\n{{ range $name := $canceledTasks -}}\n   {{ $tasksToLogNames = append $tasksToLogNames $name -}}\n{{ end -}}\n\n{{ range $taskRun := .data.extra.taskRunDetails -}}\n  {{ if has $taskRun.taskName $tasksToLogNames -}}\n    {{ $tasksToLog = append $tasksToLog $taskRun -}}\n  {{ end -}}\n  {{ if eq $taskRun.taskName $planTaskName -}}\n    {{ $planTask = $taskRun -}}\n  {{ end -}}\n{{ end -}}\n\u003c!-- =================================== Start of markdown content =================================== --\u003e\n{{ .data.extra.pipelineRunVariables.RESULT_COMMENT_HEADING }}\n\n| Namespace | PipelineRun Name | Status | Runtime |  Log File |\n| :- | :-: | :-: | :-: | :-: |\n| {{ .data.namespace }} | {{ .data.pipelineRunName }} | {{ $pipelineStatus }} | {{ .data.pipelineRuntime }} |[Log File]({{ .data.pipelineRunLogFileUrl }}) |\n\n{{if $planTask -}}\n  {{ if (regexMatch $planSumRegex $planTask.logs) -}}\n    {{ $summary := regexFind $planSumRegex $planTask.logs -}}\n    {{if $summary -}}\n      {{ $summary = $summary | replace \"Plan: \" \"Plan: :white_check_mark: \" -}}\n      {{ $summary = $summary | replace \"add, \" \"add, :large_orange_diamond: \" -}}\n      {{ $summary = $summary | replace \"change, \" \"change, :boom: \" -}}\n\n{{ $summary -}}{{ printf \"\\n\\n\" -}}\n\n    {{end -}}\n  {{end -}}\n{{end -}}\n\n{{ range $taskRun := $tasksToLog -}}\n  {{ $taskStatus := \"Failed :x:\" -}}\n  {{if or (eq $taskRun.reason \"Successful\") (eq $taskRun.reason \"Succeeded\") -}}\n    {{$taskStatus = \"Succeeded :white_check_mark:\" -}}\n  {{end -}}\n\n\u003cdetails\u003e\u003csummary\u003eExpand for \u003cb\u003e{{ $taskRun.taskName }}\u003c/b\u003e Results {{ $taskStatus }}\u003c/summary\u003e\n\u003cp\u003e\n\n| Name | Status | Start | Completed | Total Time |\n| :- | :-: | :-: | :-: | :-: |\n| {{ $taskRun.taskName }} | {{ $taskStatus }} | {{ $taskRun.startedOn }} | {{ $taskRun.completedOn }} | {{ $taskRun.totalTime }} |\n\n**Tasks details below may be truncated.  If so, refer to full log above.**\n\n```powershell\n{{ $taskRun.logs }}\n```\n\n\u003c/p\u003e\n\u003c/details\u003e\n\n{{ end -}}\n"}}}],"traceHeaderKey":"X-Cloud-Trace-Context"}